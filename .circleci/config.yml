version: 2.1
jobs:
  deps_api:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/compendium/api
    steps:
      - checkout:
          path: ~/compendium
      - run: go get -v -t -d ./...
      - save_cache:
          key: compendium-api-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/compendium/api
            - "/go/pkg"
  test_api:
    docker:
      - image: circleci/golang:1.12
    working_directory: ~/compendium/api
    steps:
      - restore_cache:
          keys:
            - compendium-api-v1-{{ .Branch }}-{{ .Revision }}
            - compendium-api-v1-{{ .Branch }}-
            - compendium-api-v1-
      - run: go get github.com/schrej/godacov
      - run:
          name: Run the tests for the api and send coverage
          command: |
            ./run-tests.sh
            bash <(curl -s https://codecov.io/bash) -c -F api
  deps_portal:
    docker:
      - image: circleci/node:10.16.0-browsers-legacy
    working_directory: ~/compendium/portal
    steps:
      - checkout:
          path: ~/compendium
      - run: yarn
      - run: cp src/content.example.json src/content.json
      - save_cache:
          key: compendium-portal-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/compendium/portal
  test_portal:
    docker:
      - image: circleci/node:10.16.0-browsers-legacy
    working_directory: ~/compendium/portal
    steps:
      - restore_cache:
          keys:
            - compendium-portal-v1-{{ .Branch }}-{{ .Revision }}
            - compendium-portal-v1-{{ .Branch }}-
            - compendium-portal-v1-
      - run:
          name: Copy config.example.json to config.json
          command: cp config.example.json config.json
      - run:
          name: Copy content.example.json to content.json
          command: cp src/content.example.json src/content.json
      - run:
          name: Run the tests for the portal and send coverage
          command: |
            yarn test -w 1 || TEST_RUNNER_EXIT_CODE=$?
            yarn coverage
            exit $TEST_RUNNER_EXIT_CODE
  build_publish_api_docker:
    docker:
      - image: circleci/golang:1.12
    environment:
      IMAGE_NAME: freshwebio/compendium-api
    working_directory: ~/compendium/api
    steps:
      - checkout:
          path: ~/compendium
      - setup_remote_docker
      - run:
          name: Setup docker image tag environment variable
          command: |
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              IMAGE_TAG="dev"
            else
              IMAGE_TAG=${CIRCLE_TAG//v/version-}
            fi
            echo "export IMAGE_TAG=$IMAGE_TAG" >> $BASH_ENV
      - run:
          name: Build api server binary and docker image
          command: make -f Makefile cibuild
      - run:
          name: Publish Docker image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_TAG
workflows:
  version: 2
  deps_and_test:
    jobs:
      - deps_api:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - development
      - test_api:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - development
          requires:
            - deps_api
      - deps_portal:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - development
      - test_portal:
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
                - development
          requires:
            - deps_portal
      - build_publish_api_docker:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
          requires:
            - test_api
